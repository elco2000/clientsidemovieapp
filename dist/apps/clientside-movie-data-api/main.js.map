{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///../../libs/backend/features/src/index.ts","webpack:///../../libs/backend/features/src/lib/backend-features-movie.module.ts","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///../../libs/backend/features/src/lib/movie/movie.controller.ts","webpack:///../../libs/backend/features/src/lib/movie/movie.service.ts","webpack:///../../libs/backend/features/src/lib/movie/movie.schema.ts","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"nest-neo4j\"","webpack:///../../libs/backend/dto/src/index.ts","webpack:///../../libs/backend/dto/src/lib/dto.module.ts","webpack:///../../libs/backend/dto/src/lib/movie.dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///../../libs/backend/dto/src/lib/actor.dto.ts","webpack:///../../libs/backend/dto/src/lib/user.dto.ts","webpack:///../../libs/backend/dto/src/lib/review.dto.ts","webpack:///../../libs/backend/dto/src/lib/collection.dto.ts","webpack:///../../libs/backend/dto/src/lib/api-respone.interceptor.ts","webpack:///external commonjs \"rxjs/operators\"","webpack:///../../libs/backend/features/src/lib/backend-features-actor.module.ts","webpack:///../../libs/backend/features/src/lib/actor/actor.controller.ts","webpack:///../../libs/backend/features/src/lib/actor/actor.service.ts","webpack:///../../libs/backend/features/src/lib/actor/actor.schema.ts","webpack:///../../libs/backend/features/src/lib/backend-features-review.module.ts","webpack:///../../libs/backend/features/src/lib/review/review.controller.ts","webpack:///../../libs/backend/features/src/lib/review/review.service.ts","webpack:///external commonjs \"nest-neo4j/dist\"","webpack:///external commonjs \"uuid\"","webpack:///../../libs/backend/auth/src/index.ts","webpack:///../../libs/backend/auth/src/lib/auth.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///../../libs/backend/user/src/index.ts","webpack:///../../libs/backend/user/src/lib/user.module.ts","webpack:///../../libs/backend/user/src/lib/user/user.controller.ts","webpack:///../../libs/backend/user/src/lib/user/user.service.ts","webpack:///../../libs/backend/user/src/lib/user/user-exists.guard.ts","webpack:///../../libs/backend/auth/src/lib/auth/auth.controller.ts","webpack:///../../libs/backend/auth/src/lib/auth/auth.service.ts","webpack:///../../libs/shared/api/src/index.ts","webpack:///../../libs/shared/api/src/lib/models/movie.interface.ts","webpack:///../../libs/shared/api/src/lib/models/api-response.interface.ts","webpack:///../../libs/shared/api/src/lib/models/actor.interface.ts","webpack:///../../libs/shared/api/src/lib/models/auth.interface.ts","webpack:///../../libs/shared/api/src/lib/models/user.interface.ts","webpack:///../../libs/shared/api/src/lib/models/review.interface.ts","webpack:///../../libs/shared/api/src/lib/models/collection.interface.ts","webpack:///../../libs/backend/auth/src/lib/decorators/decorators.ts","webpack:///../../libs/backend/auth/src/lib/auth/auth.guard.ts","webpack:///../../libs/backend/features/src/lib/backend-features-collection.module.ts","webpack:///../../libs/backend/features/src/lib/list/collection.controller.ts","webpack:///../../libs/backend/features/src/lib/list/collection.service.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { BackendFeaturesActorModule, BackendFeaturesCollectionModule, BackendFeaturesMovieModule, BackendFeaturesReviewModule } from '@org/backend/features';\r\nimport { AuthModule } from '@org/backend/auth';\r\nimport { Neo4jModule } from 'nest-neo4j';\r\nimport { UserModule } from '@org/backend/user';\r\n\r\n@Module({\r\n  imports: [BackendFeaturesMovieModule, \r\n    BackendFeaturesActorModule, \r\n    BackendFeaturesReviewModule,\r\n    BackendFeaturesCollectionModule, \r\n    AuthModule, \r\n    UserModule,\r\n    Neo4jModule.forRoot({\r\n      scheme: 'neo4j+s',\r\n      host: '80f65338.databases.neo4j.io',\r\n      port: 7687,\r\n      username: 'neo4j',\r\n      password: '5nJgIGtl_bhK4gG2wKZwVvIkvpAOqWfZF770r33nvAE',\r\n    }),],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","module.exports = require(\"tslib\");","import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Hello API' };\r\n  }\r\n}\r\n","export * from './lib/backend-features-movie.module';\r\nexport * from './lib/backend-features-actor.module';\r\nexport * from './lib/backend-features-review.module';\r\nexport * from './lib/backend-features-collection.module';\r\nexport * from './lib/movie/movie.schema';\r\nexport * from './lib/actor/actor.schema';","import { MongooseModule } from '@nestjs/mongoose';\r\nimport { Module } from '@nestjs/common';\r\nimport { MovieController } from './movie/movie.controller';\r\nimport { MovieService } from './movie/movie.service';\r\nimport { Movie, MovieSchema } from './movie/movie.schema';\r\n\r\n@Module({\r\n  controllers: [MovieController],\r\n  providers: [MovieService],\r\n  imports: [MongooseModule.forRoot('mongodb+srv://elcoAdmin:Admin123Database@clusterlocaldataapi.m0cwagc.mongodb.net/'), MongooseModule.forFeature([{ name: Movie.name, schema: MovieSchema}]) ],\r\n  exports: [MovieService],\r\n})\r\nexport class BackendFeaturesMovieModule {}\r\n","module.exports = require(\"@nestjs/mongoose\");","import { Controller, Delete, Put } from '@nestjs/common';\r\nimport { Get, Param, Post, Body } from '@nestjs/common';\r\nimport { MovieService } from './movie.service';\r\nimport { CreateMovieDto } from '@org/backend/dto';\r\nimport { Movie } from './movie.schema';\r\n\r\n@Controller('movie')\r\nexport class MovieController {\r\n    constructor(private movieService: MovieService) {}\r\n\r\n    @Get('')\r\n    async getAll(): Promise<Movie[]> {\r\n        return this.movieService.getAll();\r\n    }\r\n\r\n    @Get('actor/:id')\r\n    async getSmallInformationByActorId(@Param('id') id: string): Promise<Movie[]> {\r\n        return this.movieService.getSmallInformationByActorId(id);\r\n    }\r\n\r\n    @Put('collection')\r\n    async getMoviesByIds(@Body() data: string[]): Promise<Movie[]> {\r\n        return this.movieService.getMoviesByIds(data);\r\n    }\r\n\r\n    @Get(':id')\r\n    async getOne(@Param('id') id: string): Promise<Movie> {\r\n        return this.movieService.getOne(id);\r\n    }\r\n\r\n    @Post('')\r\n    async create(@Body() data: CreateMovieDto): Promise<Movie> {\r\n        return this.movieService.create(data);\r\n    }\r\n\r\n    @Put(':id')\r\n    async update(@Body() data: Movie): Promise<Movie | null> {\r\n        return this.movieService.edit(data);\r\n    }\r\n\r\n    @Delete(':id')\r\n    async delete(@Param('id') id: string): Promise<Movie> {\r\n        return this.movieService.delete(id);\r\n    }\r\n}\r\n","import { Injectable, Logger, NotFoundException } from '@nestjs/common';\r\nimport { Movie } from './movie.schema';\r\nimport mongoose, { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { CreateMovieDto } from '@org/backend/dto';\r\nimport { Neo4jService } from \"nest-neo4j\";\r\n\r\n@Injectable()\r\nexport class MovieService {\r\n  TAG = 'MovieService';\r\n\r\n  constructor(@InjectModel(Movie.name) private movieModel: Model<Movie>, private neo4jService: Neo4jService) {}\r\n\r\n  async getAll(): Promise<Movie[]> {\r\n    Logger.log('getAll', this.TAG);\r\n    return this.movieModel.find().exec();\r\n  }\r\n\r\n  async getSmallInformationByActorId(id: string): Promise<Movie[]> {\r\n    Logger.log(`getSmallInformationByActorId(${id})`, this.TAG);\r\n    return this.movieModel.find({ actors: id}).select({title: 1, photo: 1}).exec();\r\n  }\r\n\r\n  async getMoviesByIds(ids: string[]): Promise<Movie[]> {\r\n    Logger.log(`getMoviesByIds`, this.TAG);\r\n  \r\n    try {\r\n      const movies = await this.movieModel.find({ _id: { $in: ids } }).exec();\r\n      if (!movies || movies.length === 0) {\r\n        throw new NotFoundException(`No movies found for the given IDs`);\r\n      }\r\n      return movies;\r\n    } catch (error) {\r\n      Logger.error(`Error fetching movies: ${error}`);\r\n      throw new Error(`Error fetching movies: ${error}`);\r\n    }\r\n  }\r\n\r\n  async getOne(id: string): Promise<Movie> {\r\n    Logger.log(`getOne(${id})`, this.TAG);\r\n    try {\r\n      const movie = await this.movieModel\r\n        .findById(id)\r\n        .populate('actors')\r\n        .exec();\r\n      if (!movie) {\r\n        throw new NotFoundException(`Movie not found for ID: ${id}`);\r\n      }\r\n      return movie;\r\n    } catch (error) {\r\n      Logger.error(`Error fetching movie: ${error}`);\r\n      throw new Error(`Error fetching movie: ${error}`);\r\n    }\r\n  }\r\n\r\n  async create(movie: CreateMovieDto): Promise<Movie> {\r\n    Logger.log('create', this.TAG);\r\n  \r\n    try {\r\n      const newMovie = new this.movieModel(movie);\r\n      newMovie._id = new mongoose.Types.ObjectId().toString();\r\n  \r\n      // MongoDB\r\n      const resultMongoDB = await newMovie.save();\r\n  \r\n      if (resultMongoDB) {\r\n        Logger.log('Movie saved in MongoDB:', resultMongoDB);\r\n      } else {\r\n        Logger.error('Failed to save movie in MongoDB');\r\n        throw new Error('Failed to save movie in MongoDB');\r\n      }\r\n  \r\n      // Neo4j\r\n      await this.neo4jService.write(\r\n        `\r\n        CREATE (m:Movie {\r\n          id: $id\r\n        }) \r\n        RETURN m\r\n        `,\r\n        { id: newMovie._id.toString() }\r\n      );\r\n  \r\n      return resultMongoDB;\r\n    } catch (error) {\r\n      Logger.error(`Error creating movie: ${error}`);\r\n      throw new Error(`Error creating movie: ${error}`);\r\n    }\r\n  }\r\n\r\n  async edit(movie: Movie): Promise<Movie | null> {\r\n    Logger.log('edit', this.TAG);\r\n\r\n    const editedMovie = { ...movie };\r\n\r\n    try {\r\n      const updatedMovie = await this.movieModel\r\n        .findByIdAndUpdate(editedMovie._id, editedMovie, { new: true })\r\n        .exec();\r\n\r\n      return updatedMovie ?? null;\r\n    } catch (error) {\r\n      Logger.error(`Error editing movie: ${error}`);\r\n      throw new Error(`Error editing movie: ${error}`);\r\n    }\r\n  }\r\n\r\n  async delete(id: string): Promise<Movie> {\r\n    Logger.log('delete', this.TAG);\r\n\r\n    try {\r\n      const movie = await this.movieModel.findByIdAndDelete(id).exec();\r\n      if (!movie) {\r\n      throw new NotFoundException(`Movie not found for ID: ${id}`);\r\n      }\r\n\r\n      // Neo4j\r\n      await this.neo4jService.write(\r\n        `\r\n        MATCH (m:Movie {\r\n          id: $id\r\n        }) \r\n        DELETE m\r\n        `,\r\n        { id: id }\r\n      );\r\n\r\n      return movie;\r\n\r\n    } catch (error) {\r\n      Logger.error(`Error delete movie: ${error}`);\r\n      throw new Error(`Error delete movie: ${error}`);\r\n    }\r\n  }\r\n}\r\n","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport mongoose, { HydratedDocument } from \"mongoose\";\r\nimport { Actor } from \"../actor/actor.schema\";\r\n\r\nexport type MovieDocument = HydratedDocument<Movie>;\r\n\r\n@Schema()\r\nexport class Movie {\r\n\r\n    @Prop({type: mongoose.Schema.Types.ObjectId})\r\n    _id!: string;\r\n\r\n    @Prop()\r\n    title!: string;\r\n\r\n    @Prop()\r\n    photo!: string;\r\n\r\n    @Prop()\r\n    length!: number;\r\n\r\n    @Prop()\r\n    releaseDate!: Date;\r\n\r\n    @Prop()\r\n    advicedAge!: number;\r\n\r\n    @Prop()\r\n    genre!: string\r\n\r\n    @Prop()\r\n    language!: string\r\n\r\n    @Prop()\r\n    director!: string;\r\n\r\n    @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Actor' }] })\r\n    actors!: Actor[];\r\n}\r\n\r\nexport const MovieSchema = SchemaFactory.createForClass(Movie);","module.exports = require(\"mongoose\");","module.exports = require(\"nest-neo4j\");","export * from './lib/dto.module';\r\nexport * from './lib/movie.dto';\r\nexport * from './lib/actor.dto';\r\nexport * from './lib/user.dto';\r\nexport * from './lib/review.dto';\r\nexport * from './lib/collection.dto';\r\nexport * from './lib/api-respone.interceptor';\r\n","import { Module } from '@nestjs/common';\r\n\r\n@Module({\r\n  controllers: [],\r\n  providers: [],\r\n  exports: [],\r\n})\r\nexport class DtoModule {}\r\n","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    IsOptional,\r\n    IsDate,\r\n    IsNumber,\r\n    IsArray,\r\n} from 'class-validator';\r\nimport {\r\n    ICreateMovie,\r\n    IUpdateMovie,\r\n} from '@org/shared/api';\r\n\r\nexport class CreateMovieDto implements ICreateMovie {\r\n\r\n    constructor(data: Partial<CreateMovieDto>) { Object.assign(this, data) }\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsNotEmpty()\r\n    photo!: string;\r\n\r\n    @IsNumber()\r\n    @IsNotEmpty()\r\n    length!: number;\r\n\r\n    @IsDate()\r\n    @IsOptional()\r\n    releaseDate!: Date;\r\n\r\n    @IsNumber()\r\n    @IsNotEmpty()\r\n    advicedAge!: number;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    genre!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    language!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    director!: string;\r\n\r\n    @IsArray()\r\n    @IsNotEmpty()\r\n    actors!: string[];\r\n}\r\n\r\nexport class UpdateMovieDto implements IUpdateMovie {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    id!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsNotEmpty()\r\n    photo!: string;\r\n\r\n    @IsNumber()\r\n    @IsNotEmpty()\r\n    length!: number;\r\n\r\n    @IsDate()\r\n    @IsOptional()\r\n    releaseDate!: Date;\r\n\r\n    @IsNumber()\r\n    @IsNotEmpty()\r\n    advicedAge!: number;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    genre!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    language!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    director!: string;\r\n\r\n    @IsArray()\r\n    @IsNotEmpty()\r\n    actors!: string[];\r\n}","module.exports = require(\"class-validator\");","import { ICreateActor, IUpdateActor } from \"@org/shared/api\";\r\nimport { IsDate, IsNotEmpty, IsString } from \"class-validator\";\r\n\r\nexport class CreateActorDto implements ICreateActor {\r\n\r\n    constructor(data: Partial<ICreateActor>) { Object.assign(this, data) }\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    name!: string;\r\n\r\n    @IsDate()\r\n    @IsNotEmpty()\r\n    birthdate!: Date;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    nationality!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    photo!: string;\r\n}\r\n\r\nexport class UpdateActorDto implements IUpdateActor {\r\n\r\n    constructor(data: Partial<IUpdateActor>) { Object.assign(this, data) }\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    id!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    name!: string;\r\n\r\n    @IsDate()\r\n    @IsNotEmpty()\r\n    birthdate!: Date;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    nationality!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    photo!: string;\r\n}\r\n","import { IUpdateUser } from \"@org/shared/api\";\r\nimport { IsDate, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\r\n\r\nexport class CreateUserDto {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    username!: string\r\n\r\n    @IsNotEmpty()\r\n    password!: string\r\n\r\n    @IsDate()\r\n    @IsNotEmpty()\r\n    birthdate!: Date\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    country!: string\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    description!: string\r\n}\r\n\r\nexport class UpdateUserDto implements IUpdateUser {\r\n    id?: string | undefined;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    username!: string\r\n\r\n    @IsNotEmpty()\r\n    password!: string\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    description!: string\r\n}","import { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\r\n\r\nexport class CreateReviewDto {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    text!: string;\r\n\r\n    @IsNumber()\r\n    @IsNotEmpty()\r\n    rating!: number;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    userId!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    movieId!: string;\r\n}\r\n\r\nexport class UpdateReviewDto {\r\n    id?: string | undefined;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    text!: string;\r\n\r\n    @IsNumber()\r\n    @IsNotEmpty()\r\n    rating!: number\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    userId!: string;\r\n}","import { IsBoolean, IsNotEmpty, IsString } from \"class-validator\";\r\n\r\nexport class CreateCollectionDto {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    name!: string\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    description!: string\r\n\r\n    @IsBoolean()\r\n    @IsNotEmpty()\r\n    privateCollection!: string\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    userId!: string\r\n}\r\n\r\nexport class EditCollectionDto {\r\n    id?: string | undefined;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    name!: string\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    description!: string\r\n\r\n    @IsBoolean()\r\n    @IsNotEmpty()\r\n    privateCollection!: string\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    userId!: string\r\n}\r\n\r\nexport class EditCollectionMovie {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    userId!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    movieId!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    collectionId!: string;\r\n}","import { ApiResponse } from '@org/shared/api';\r\nimport { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\r\nimport { Observable } from 'rxjs'; \r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiResponseInterceptor implements NestInterceptor {\r\n    \r\n    intercept(\r\n        context: ExecutionContext,\r\n        next: CallHandler\r\n    ): Observable<ApiResponse<unknown>> {\r\n        return next.handle().pipe(\r\n            map((results) => {\r\n                if (results) {\r\n                    return {\r\n                        results,\r\n                        info: {\r\n                            version: '1.0',\r\n                            type: results instanceof Array ? 'list' : 'object',\r\n                            count:\r\n                                results instanceof Array ? results.length : 1,\r\n                        },\r\n                    };\r\n                } else {\r\n                    return {\r\n                        results: undefined,\r\n                        info: {\r\n                            version: '1.0',\r\n                            type: 'none',\r\n                            count: 0,\r\n                        },\r\n                    };\r\n                }\r\n            })\r\n        );\r\n    }\r\n}","module.exports = require(\"rxjs/operators\");","import { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { ActorController } from \"./actor/actor.controller\";\r\nimport { Actor, ActorSchema } from \"./actor/actor.schema\";\r\nimport { ActorService } from \"./actor/actor.service\";\r\nimport { Module } from \"@nestjs/common\";\r\n\r\n@Module({\r\n    controllers: [ActorController],\r\n    providers: [ActorService],\r\n    imports: [MongooseModule.forRoot('mongodb+srv://elcoAdmin:Admin123Database@clusterlocaldataapi.m0cwagc.mongodb.net/'), MongooseModule.forFeature([{ name: Actor.name, schema: ActorSchema}]) ],\r\n    exports: [ActorService]\r\n})\r\nexport class BackendFeaturesActorModule {}","import { CreateActorDto } from \"@org/backend/dto\";\r\nimport { ActorService } from \"./actor.service\";\r\nimport { Body, Controller, Delete, Get, Param, Post, Put } from \"@nestjs/common\";\r\nimport { Actor } from \"./actor.schema\";\r\n\r\n@Controller('actor')\r\nexport class ActorController {\r\n    constructor(private actorService: ActorService) {}\r\n\r\n    @Get('')\r\n    async getAll(): Promise<Actor[]> {\r\n        return this.actorService.getAll();\r\n    }\r\n    \r\n    @Get('lookup')\r\n    async getAllForLookup(): Promise<Actor[]> {\r\n        return this.actorService.GetAllForLookup();\r\n    }\r\n\r\n\r\n    @Get(':id')\r\n    async getOne(@Param('id') id: string): Promise<Actor> {\r\n        return this.actorService.getOne(id);\r\n    }\r\n    \r\n    @Post('')\r\n    async create(@Body() data: CreateActorDto): Promise<Actor> {\r\n        return this.actorService.create(data);\r\n    }\r\n\r\n    @Put(':id')\r\n    async update(@Body() data: Actor): Promise<Actor | null> {\r\n        return this.actorService.edit(data);\r\n    }\r\n\r\n    @Delete(':id')\r\n    async delete(@Param('id') id: string): Promise<Actor> {\r\n        return this.actorService.delete(id);\r\n    }\r\n}","import { Injectable, Logger, NotFoundException } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Actor } from \"./actor.schema\";\r\nimport mongoose, { Model } from \"mongoose\";\r\nimport { CreateActorDto } from \"@org/backend/dto\";\r\n\r\n@Injectable()\r\nexport class ActorService {\r\n    TAG = 'ActorService';\r\n\r\n    constructor(\r\n        @InjectModel(Actor.name) private actorModel: Model<Actor>,\r\n        ) {}\r\n\r\n    async getAll(): Promise<Actor[]> {\r\n        Logger.log('getAll', this.TAG);\r\n        return this.actorModel.find().exec();\r\n    }\r\n\r\n    async GetAllForLookup(): Promise<Actor[]> {\r\n        Logger.log('getAllForLookup', this.TAG);\r\n        return this.actorModel.find().select({name: 1}).exec();\r\n    }\r\n\r\n    async getOne(id: string): Promise<Actor> {\r\n        Logger.log(`getOne(${id})`, this.TAG);\r\n        try {\r\n            const actor = await this.actorModel.findById(id).exec();\r\n            if (!actor) {\r\n                throw new NotFoundException(`Actor not found for ID: ${id}`);\r\n            }\r\n            return actor;\r\n        } catch (error) {\r\n            Logger.error(`Error fetching actor: ${error}`);\r\n            throw new Error(`Error fetching actor: ${error}`);\r\n        }\r\n    }\r\n\r\n    async create(actor: CreateActorDto): Promise<Actor> {\r\n        Logger.log('create', this.TAG);\r\n\r\n        const newActor = new this.actorModel(actor);\r\n\r\n        newActor._id = new mongoose.Types.ObjectId().toString();\r\n\r\n        return newActor.save();\r\n    }\r\n\r\n    async edit(actor: Actor): Promise<Actor | null> {\r\n        Logger.log('edit', this.TAG);\r\n\r\n        const editedActor = { ...actor };\r\n\r\n        try {\r\n            const updatedActor = await this.actorModel.findByIdAndUpdate(editedActor._id, editedActor, { new: true}).exec();\r\n\r\n            return updatedActor ?? null;\r\n        } catch (error) {\r\n            Logger.error(`Error editing actor: ${error}`);\r\n            throw new Error(`Error editing actor: ${error}`);\r\n        }\r\n    }\r\n\r\n    async delete(id: string): Promise<Actor> {\r\n        Logger.log('delete', this.TAG);\r\n        const actor = await this.actorModel.findByIdAndDelete(id).exec();\r\n        if (!actor) {\r\n            throw new NotFoundException(`Actor not found for ID: ${id}`);\r\n        }\r\n\r\n        return actor;\r\n    }\r\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport mongoose, { HydratedDocument } from \"mongoose\";\r\n\r\nexport type ActorDocument = HydratedDocument<Actor>;\r\n\r\n@Schema()\r\nexport class Actor {\r\n\r\n    @Prop({type: mongoose.Schema.Types.ObjectId})\r\n    _id!: string;\r\n\r\n    @Prop()\r\n    name!: string;\r\n\r\n    @Prop()\r\n    birthdate!: Date;\r\n\r\n    @Prop()\r\n    nationality!: string;\r\n\r\n    @Prop()\r\n    photo!: string;\r\n}\r\n\r\nexport const ActorSchema = SchemaFactory.createForClass(Actor);\r\n","import { MongooseModule } from '@nestjs/mongoose';\r\nimport { Module } from '@nestjs/common';\r\nimport { ReviewController } from './review/review.controller';\r\nimport { ReviewService } from './review/review.service';\r\nimport { AuthModule } from '@org/backend/auth';\r\nimport { JwtModule } from '@nestjs/jwt';\r\n\r\n@Module({\r\n    controllers: [ReviewController],\r\n    providers: [ReviewService],\r\n    imports: [MongooseModule.forRoot('mongodb+srv://elcoAdmin:Admin123Database@clusterlocaldataapi.m0cwagc.mongodb.net/'),\r\n                AuthModule,\r\n                JwtModule],\r\n    exports: [ReviewService]\r\n})\r\nexport class BackendFeaturesReviewModule {}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Body, Controller, Param, Post, Put, Delete, Get, UseGuards, Request } from \"@nestjs/common\";\r\nimport { ReviewService } from \"./review.service\";\r\nimport { CreateReviewDto } from \"@org/backend/dto\";\r\nimport { IReview, IReviewInfo } from \"@org/shared/api\";\r\nimport { AuthGuard } from \"@org/backend/auth\";\r\n\r\n@Controller('review')\r\nexport class ReviewController {\r\n    constructor(private reviewService: ReviewService) {}\r\n\r\n    @Get('movie/:movieId')\r\n    async getAll(@Param('movieId') movieId: string): Promise<IReviewInfo[]> {\r\n        return this.reviewService.getAll(movieId);\r\n    }\r\n\r\n    @Get(':id')\r\n    async getOne(@Param('id') id: string): Promise<IReviewInfo> {\r\n        return this.reviewService.getOne(id);\r\n    }\r\n\r\n    @Post('')\r\n    @UseGuards(AuthGuard)\r\n    async create(@Body() data: CreateReviewDto): Promise<IReview> {\r\n        return this.reviewService.create(data);\r\n    }\r\n\r\n    @Put(':id')\r\n    @UseGuards(AuthGuard)\r\n    async update(@Param('id') id: string, @Request() req: any): Promise<IReview | null> {\r\n        return this.reviewService.update(id, req);\r\n    }\r\n\r\n    @Delete(':id')\r\n    @UseGuards(AuthGuard)\r\n    async delete (@Param('id') id: string, @Request() req: any): Promise<string> {\r\n        return this.reviewService.delete(id, req);\r\n    }\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Injectable, Logger, UnauthorizedException } from \"@nestjs/common\";\r\nimport { CreateReviewDto } from \"@org/backend/dto\";\r\nimport { IReview, IReviewInfo } from \"@org/shared/api\";\r\nimport { Neo4jService } from \"nest-neo4j/dist\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Injectable()\r\nexport class ReviewService {\r\n    TAG = 'ReviewService';\r\n\r\n    constructor(\r\n        private neo4jService: Neo4jService\r\n    ) {}\r\n\r\n    // GET All\r\n    async getAll(movieId: string): Promise<IReviewInfo[]> {\r\n        Logger.log(`Get all reviews for movie ID: ${movieId}`, this.TAG);\r\n\r\n        const result = await this.neo4jService.read(\r\n            `\r\n            MATCH (:Movie {id: $movieId})<-[:REVIEWMADEFOR]-(r:Review)<-[:MAKEDREVIEW]-(u:User)\r\n            RETURN r {.id, .title, .text, .rating, .date, userId: u.id, username: u.username}\r\n            `,\r\n            { movieId }\r\n        );\r\n\r\n        return result.records.map((record) => record.get('r'));\r\n    }\r\n\r\n    // GET by id\r\n    async getOne(reviewId: string): Promise<IReviewInfo> {\r\n        Logger.log(`Get review ${reviewId}`, this.TAG);\r\n\r\n        const result = await this.neo4jService.read(\r\n            `\r\n            MATCH (r:Review {id: $reviewId})<-[:MAKEDREVIEW]-(u:User)\r\n            RETURN r {.id, .title, .text, .rating, .date, userId: u.id, username: u.username}\r\n            `,\r\n            { reviewId }\r\n        );\r\n\r\n        if (result.records.length === 0) {\r\n            throw new Error(`Review with ID ${reviewId} not found`);\r\n        }\r\n\r\n        return result.records[0].get('r');\r\n    }\r\n\r\n    // POST create\r\n    async create(review: CreateReviewDto): Promise<IReview> {\r\n        Logger.log(`Create review`, this.TAG);\r\n        const { title, text, rating } = review;\r\n        \r\n        const id = uuidv4();\r\n        const date = new Date().toDateString();\r\n\r\n        const createdReview = await this.neo4jService.write(\r\n            `\r\n            CREATE (r:Review {\r\n                id: $id,\r\n                title: $title,\r\n                text: $text,\r\n                rating: $rating,\r\n                date: $date\r\n            })\r\n            RETURN r {.id, .title, .text, .rating, .date}\r\n            `,\r\n            { id, title, text, rating, date}\r\n        )\r\n\r\n        const newReview = createdReview.records[0]?.get('r');\r\n        if (!newReview) {\r\n            throw new Error('Failed to create review');\r\n        }\r\n\r\n        const userId = review.userId;\r\n        const reviewId = newReview.id; // Verander '.Id' naar '.id'\r\n\r\n        await this.neo4jService.write(\r\n            `\r\n            MATCH (u:User), (r:Review)\r\n            WHERE u.id = $userId and r.id = $reviewId\r\n            MERGE (u)-[:MAKEDREVIEW]->(r)\r\n            `,\r\n            { userId: userId, reviewId: reviewId }\r\n        )\r\n\r\n        const movieId = review.movieId;\r\n        await this.neo4jService.write(\r\n            `\r\n            MATCH (r:Review), (m:Movie)\r\n            WHERE r.id = $reviewId and m.id = $movieId\r\n            MERGE (r)-[:REVIEWMADEFOR]->(m)\r\n            `,\r\n            { reviewId: reviewId, movieId: movieId }\r\n        )\r\n\r\n        return newReview;\r\n    }\r\n\r\n    // PUT update\r\n    async update(id: string, req: any): Promise<IReview | null> {\r\n        Logger.log(`Update review`, this.TAG);\r\n        const review = req.body;\r\n        const userId = req.user.user_id;\r\n\r\n        if( userId === review.userId) {\r\n            const date = new Date().toDateString();\r\n\r\n            const result = await this.neo4jService.write(\r\n                `\r\n                MATCH (r:Review {id: $id})\r\n                RETURN r {.id, .title, .text, .rating, .date }\r\n                `,\r\n                { id: id }\r\n            )\r\n    \r\n            if (!result.records[0]) {\r\n                Logger.debug('User not found');\r\n                return null;\r\n            };\r\n    \r\n            const updatedReview: Partial<IReview> = {\r\n                title: review.title,\r\n                text: review.text,\r\n                rating: review.rating,\r\n                date: date\r\n            };\r\n    \r\n            const updateResult = await this.neo4jService.write(\r\n                `\r\n                MATCH (r:Review {id: $id})\r\n                SET r += $updatedReview\r\n                RETURN r {.id, .title, .text, .rating, .date} as review\r\n                `,\r\n                { id: id, updatedReview: updatedReview }\r\n            );\r\n    \r\n            if (!updateResult.records[0]) {\r\n                throw new Error('Failed to update review');\r\n            };\r\n    \r\n            const updatedResult = updateResult.records[0].get('review');\r\n    \r\n            const updatedReviewInfo: IReview = {\r\n                id: updatedResult.id,\r\n                title: updatedResult.title,\r\n                text: updatedResult.text,\r\n                rating: updatedResult.rating,\r\n                date: updatedResult.date,\r\n                userId: review.userId\r\n            };\r\n    \r\n            return updatedReviewInfo;\r\n        }\r\n\r\n        throw new UnauthorizedException();\r\n       \r\n    }   \r\n\r\n\r\n    // DELETE\r\n\r\n    async delete(id: string, req: any): Promise<string> {\r\n        Logger.log('delete', this.TAG);\r\n        const userThatDeleted = req.body;\r\n        const userId = req.user.user_id;\r\n\r\n        if(userThatDeleted.userId === userId) {\r\n            const deleteResult = await this.neo4jService.write(\r\n                `\r\n                MATCH (r:Review {id: $id})\r\n                DETACH DELETE r\r\n                `,\r\n                { id: id }\r\n            );\r\n    \r\n            const containsUpdates = deleteResult.summary.updateStatistics.containsUpdates();\r\n    \r\n            if (!containsUpdates) {\r\n                Logger.debug('Failed to delete review');\r\n                throw new Error('Failed to delete review');\r\n            }\r\n    \r\n            return 'Success';\r\n        }\r\n\r\n        throw new UnauthorizedException();\r\n    }\r\n}","module.exports = require(\"nest-neo4j/dist\");","module.exports = require(\"uuid\");","export * from './lib/auth.module';\r\nexport * from './lib/auth/auth.guard';\r\n","import { Module } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { UserModule } from '@org/backend/user'; \r\nimport { AuthController } from './auth/auth.controller';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Module({\r\n  imports: [\r\n    UserModule,\r\n    JwtModule.register({\r\n      secret: process.env['JWT_SECRET'] || 'secretstring',\r\n      signOptions: { expiresIn: '12 days' }\r\n    })\r\n  ],\r\n  controllers: [AuthController],\r\n  providers: [AuthService],\r\n  exports: [AuthService],\r\n})\r\nexport class AuthModule {}\r\n","module.exports = require(\"@nestjs/jwt\");","export * from './lib/user.module';\r\nexport * from './lib/user/user-exists.guard';\r\nexport * from './lib/user.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { UserController } from './user/user.controller';\r\nimport { UserService } from './user/user.service';\r\n\r\n@Module({\r\n  controllers: [UserController],\r\n  providers: [UserService],\r\n  exports: [UserService],\r\n})\r\nexport class UserModule {}\r\n","import { Body, Get, Put } from '@nestjs/common';\r\nimport { Controller, Param } from \"@nestjs/common\";\r\nimport { UserService } from \"./user.service\";\r\nimport { IUser, IUserInfo } from \"@org/shared/api\";\r\nimport { UpdateUserDto } from '@org/backend/dto';\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n    constructor(private readonly userService: UserService) {}\r\n\r\n        @Get('')\r\n        async getAll(): Promise<IUser[]> {\r\n            return this.userService.getAll();\r\n        }\r\n\r\n        @Get(':id')\r\n        async findOne(@Param('id') userid: string): Promise<IUser | null> {\r\n            return this.userService.findById(userid);\r\n        }\r\n    \r\n        @Put(':id')\r\n        async update(@Param('id') userid: string, @Body() data: UpdateUserDto): Promise<IUserInfo | null> {\r\n            return this.userService.update(userid ,data);\r\n        }\r\n\r\n        @Put(':userid/follow/:followuserid')\r\n        async follow(@Param('userid') userid: string, @Param('followuserid') followuserid: string): Promise<IUser | null> {\r\n            return this.userService.follow(userid, followuserid);\r\n        }\r\n\r\n        @Put(':userid/unfollow/:unfollowuserid')\r\n        async unfollow(@Param('userid') userid: string, @Param('unfollowuserid') unfollowuserid: string): Promise<IUser | null> {\r\n            return this.userService.unfollow(userid, unfollowuserid);\r\n        }\r\n\r\n        @Get(':id/followers')\r\n        async getFollowers(@Param('id') userid: string): Promise<IUser[]> {\r\n            return this.userService.getFollowers(userid);\r\n        }\r\n\r\n        @Get(':id/following')\r\n        async getFollowing(@Param('id') userid: string): Promise<IUser[]> {\r\n            return this.userService.getFollowing(userid);\r\n        }\r\n}","import { Injectable, Logger } from '@nestjs/common';\r\nimport { UpdateUserDto } from '@org/backend/dto';\r\nimport { IUser, IUserInfo } from '@org/shared/api';\r\nimport { Neo4jService } from 'nest-neo4j';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private readonly logger: Logger = new Logger(UserService.name);\r\n\r\n  constructor(private neo4jService: Neo4jService) {}\r\n\r\n  async getAll(): Promise<IUser[]> {\r\n    this.logger.log(`Getting all users`);\r\n  \r\n    const result = await this.neo4jService.read(\r\n      `\r\n        MATCH (u:User)\r\n        RETURN u {.id, .username, .birthdate, .country, .description} as user\r\n      `\r\n    );\r\n  \r\n    const users: IUser[] = result.records.map((record) => ({\r\n      id: record.get('user').id,\r\n      username: record.get('user').username,\r\n      birthdate: record.get('user').birthdate,\r\n      country: record.get('user').country,\r\n      description: record.get('user').description,\r\n    }));\r\n  \r\n    return users;\r\n  }\r\n\r\n  async findById(id: string): Promise<IUser | null> {\r\n    this.logger.log(`Finding user with id ${id}`);\r\n    const item = await this.neo4jService.read(\r\n      `\r\n            MATCH (u:User { id: $id })\r\n            RETURN u {.id, .username, .birthdate, .country, .description} as user\r\n        `,\r\n      { id }\r\n    ); // Voeg de id toe als parameter in het query-object\r\n    if (!item.records[0]) {\r\n      this.logger.debug('User not found');\r\n      return null;\r\n    }\r\n\r\n    console.log(item.records[0]);\r\n\r\n    const result = item.records[0];\r\n    const resultProperties = result.get('user');\r\n\r\n    const user: IUser = {\r\n      id: resultProperties.id,\r\n      username: resultProperties.username,\r\n      birthdate: resultProperties.birthdate,\r\n      country: resultProperties.country,\r\n      description: resultProperties.description,\r\n    };\r\n\r\n    return user;\r\n  }\r\n\r\n  async update(id: string, user: UpdateUserDto): Promise<IUserInfo | null> {\r\n    this.logger.log(`Update user ${user.username}`);\r\n\r\n    const result = await this.neo4jService.write(\r\n      `\r\n            MATCH (u:User { id: $id })\r\n            RETURN u {.id, .username, .password, .birthdate, .country, .description} as user\r\n            `,\r\n      { id }\r\n    );\r\n\r\n    if (!result.records[0]) {\r\n      this.logger.debug('User not found');\r\n      return null;\r\n    }\r\n\r\n    const existingResult = result.records[0].get('user');\r\n\r\n    const existingUser: IUserInfo = {\r\n      id: existingResult.id,\r\n      username: existingResult.username,\r\n      password: existingResult.password,\r\n      birthdate: existingResult.birthdate,\r\n      country: existingResult.country,\r\n      description: existingResult.description,\r\n    };\r\n\r\n    const updatedUser: Partial<IUserInfo> = {\r\n      username: user.username,\r\n      password: user.password || existingUser.password,\r\n      description: user.description || existingUser.description,\r\n    };\r\n\r\n    const updateResult = await this.neo4jService.write(\r\n      `\r\n            MATCH (u:User { id: $id })\r\n            SET u += $updatedUser\r\n            RETURN u {.id, .username, .birthdate, .country, .description} as user\r\n            `,\r\n      { id, updatedUser }\r\n    );\r\n\r\n    if (!updateResult.records[0]) {\r\n      throw new Error('Failed to update user');\r\n    }\r\n\r\n    const updatedResult = updateResult.records[0].get('user');\r\n\r\n    const updatedUserInfo: IUserInfo = {\r\n      id: updatedResult.id,\r\n      username: updatedResult.username,\r\n      password: updatedResult.password,\r\n      birthdate: updatedResult.birthdate,\r\n      country: updatedResult.country,\r\n      description: updatedResult.description,\r\n    };\r\n\r\n    return updatedUserInfo;\r\n  }\r\n\r\n  async follow(userId: string, followUserId: string): Promise<IUser | null> {\r\n    this.logger.log(`User ${userId} follows user ${followUserId}`);\r\n\r\n    const result = await this.neo4jService.write(\r\n      `\r\n            MATCH (u:User), (f:User)\r\n            WHERE u.id = $userId AND f.id = $followUserId\r\n            MERGE (u)-[:FOLLOWS]->(f)\r\n            `,\r\n      { userId, followUserId }\r\n    );\r\n\r\n    const containsUpdates = result.summary.updateStatistics.containsUpdates();\r\n\r\n    if (!containsUpdates) {\r\n      this.logger.debug('Failed to follow user');\r\n      return null;\r\n    }\r\n\r\n    const item = await this.neo4jService.read(\r\n      `\r\n            MATCH (u:User { id: $userId })\r\n            RETURN u {.id, .username, .birthdate, .country, .description} as user\r\n        `,\r\n      { userId }\r\n    ); // Voeg de id toe als parameter in het query-object\r\n    return item.records[0]?.get('user');\r\n  }\r\n\r\n  async unfollow(userId: string, followUserId: string): Promise<IUser | null> {\r\n    this.logger.log(`User ${userId} unfollows user ${followUserId}`);\r\n\r\n    const result = await this.neo4jService.write(\r\n      `\r\n            MATCH (u:User)-[r:FOLLOWS]->(f:User)\r\n            WHERE u.id = $userId AND f.id = $followUserId\r\n            DELETE r\r\n            `,\r\n      { userId, followUserId }\r\n    );\r\n\r\n    const containsUpdates = result.summary.updateStatistics.containsUpdates();\r\n\r\n    if (!containsUpdates) {\r\n      this.logger.debug('Failed to unfollow user');\r\n      return null;\r\n    }\r\n\r\n    const item = await this.neo4jService.read(\r\n      `\r\n            MATCH (u:User { id: $userId })\r\n            RETURN u {.id, .username, .birthdate, .country, .description} as user\r\n        `,\r\n      { userId }\r\n    ); // Voeg de id toe als parameter in het query-object\r\n    return item.records[0]?.get('user');\r\n  }\r\n\r\n  async getFollowers(userId: string): Promise<IUser[]> {\r\n    this.logger.log(`Getting followers for user with ID ${userId}`);\r\n\r\n    const result = await this.neo4jService.read(\r\n      `\r\n            MATCH (u:User)-[:FOLLOWS]->(follower:User)\r\n            WHERE follower.id = $userId\r\n            RETURN u.id AS id, u.username AS username, u.birthdate AS birthdate, u.country AS country, u.description AS description\r\n            `,\r\n      { userId }\r\n    );\r\n\r\n    const followers: IUser[] = result.records.map((record) => ({\r\n      id: record.get('id'),\r\n      username: record.get('username'),\r\n      birthdate: record.get('birthdate'),\r\n      country: record.get('country'),\r\n      description: record.get('description'),\r\n    }));\r\n\r\n    return followers;\r\n  }\r\n\r\n  async getFollowing(userId: string): Promise<IUser[]> {\r\n    this.logger.log(`Getting users followed by user with ID ${userId}`);\r\n\r\n    const result = await this.neo4jService.read(\r\n      `\r\n            MATCH (u:User)-[:FOLLOWS]->(following:User)\r\n            WHERE u.id = $userId\r\n            RETURN following.id AS id, following.username AS username, following.birthdate AS birthdate, following.country AS country, following.description AS description\r\n            `,\r\n      { userId }\r\n    );\r\n\r\n    const following: IUser[] = result.records.map((record) => ({\r\n      id: record.get('id'),\r\n      username: record.get('username'),\r\n      birthdate: record.get('birthdate'),\r\n      country: record.get('country'),\r\n      description: record.get('description'),\r\n    }));\r\n\r\n    return following;\r\n  }\r\n}\r\n","import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\r\nimport { CreateUserDto } from \"@org/backend/dto\";\r\nimport { Neo4jService } from \"nest-neo4j\";\r\n\r\n@Injectable()\r\nexport class UserExistsGuard implements CanActivate {\r\n    constructor(private neo4jService: Neo4jService) {}\r\n\r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n        const request = context.switchToHttp().getRequest();\r\n        const user = request.body as CreateUserDto;\r\n        const username = user.username;\r\n        if (!username) {\r\n            return false; // Voeg een logica toe voor het geval de gebruikersnaam niet is gevonden\r\n        }\r\n        const userResult = await this.neo4jService.read(`\r\n            MATCH (u:User {username: $username})\r\n            RETURN u {.id, .username}\r\n        `, { username });\r\n        return !!userResult;\r\n    }\r\n}","import { Body, Controller, Logger, Post, UseGuards } from \"@nestjs/common\";\r\nimport { CreateUserDto } from \"@org/backend/dto\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { IUserCredentials, IUserIdentity } from \"@org/shared/api\";\r\nimport { Public } from \"../decorators/decorators\";\r\nimport { UserExistsGuard } from \"@org/backend/user\";\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n    private readonly logger = new Logger(AuthController.name);\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    @Public()\r\n    @Post('login')\r\n    async login(@Body() credentials: IUserCredentials): Promise<IUserIdentity> {\r\n        this.logger.log('Login');\r\n        return await this.authService.login(credentials);\r\n    }\r\n\r\n    @Public()\r\n    @UseGuards(UserExistsGuard)\r\n    @Post('register')\r\n    async register(@Body() user: CreateUserDto): Promise<IUserIdentity> {\r\n        this.logger.log('Register');\r\n        return await this.authService.register(user);\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { ConflictException, Injectable, Logger, UnauthorizedException } from \"@nestjs/common\";\r\nimport { JwtService } from \"@nestjs/jwt\";\r\nimport { CreateUserDto } from \"@org/backend/dto\";\r\nimport { IUserCredentials, IUserIdentity } from \"@org/shared/api\";\r\nimport { Neo4jService } from \"nest-neo4j\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    private readonly logger = new Logger(AuthService.name);\r\n\r\n    constructor(\r\n        private neo4jService: Neo4jService,\r\n        private jwtService: JwtService\r\n    ) {}\r\n\r\n    async validateUser(credentials: IUserCredentials): Promise<any> {\r\n        this.logger.log('validateUser');\r\n        const username = credentials.username;\r\n        const userResult = await this.neo4jService.read(`\r\n            MATCH (u:User {username: $username})\r\n            RETURN u {.id, .username, .password, .birthdate, .country, .description}\r\n            `, { username });\r\n\r\n        const user = userResult.records[0]?.get('u');\r\n        if (user && user.password === credentials.password) {\r\n            return user;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async login(credentials: IUserCredentials): Promise<IUserIdentity> {\r\n        this.logger.log('login ' + credentials.username);\r\n        const username = credentials.username;\r\n    \r\n        try {\r\n            const user = await this.neo4jService.read(\r\n                `\r\n                MATCH (u:User {username: $username})\r\n                RETURN u\r\n                `,\r\n                { username }\r\n            );\r\n    \r\n            const result = user.records[0];\r\n    \r\n            if (result && result.get('u').properties.password === credentials.password) {\r\n                const userProperties = result.get('u').properties;\r\n                const payload = {\r\n                    user_id: userProperties.id, // Using identity as the ID\r\n                    role: userProperties.role\r\n                };\r\n                const userIdentity: IUserIdentity = {\r\n                    id: userProperties.id,\r\n                    username: userProperties.username,\r\n                    password: userProperties.password,\r\n                    role: userProperties.role,\r\n                    token: this.jwtService.sign(payload)\r\n                };\r\n                return userIdentity;\r\n            } else {\r\n                const errMsg = 'Email not found or password invalid';\r\n                this.logger.debug(errMsg);\r\n                throw new UnauthorizedException(errMsg);\r\n            }\r\n        } catch (error) {\r\n            this.logger.error('Error occurred during login: ', error);\r\n            throw new UnauthorizedException('Error occurred during login');\r\n        }\r\n    }\r\n\r\n    async register(user: CreateUserDto): Promise<IUserIdentity> {\r\n        this.logger.log(`Register user ${user.username}`);\r\n        const { username, password, birthdate, country, description } = user;\r\n\r\n        const userResult = await this.neo4jService.read(\r\n            `MATCH (u:User {username: $username})\r\n            RETURN u {.id, .username, .password, .birthdate, .country, .description}`,\r\n            { username }\r\n        );\r\n\r\n        const existingUser = userResult.records[0]?.get('u');\r\n        if (existingUser) {\r\n            this.logger.debug('User exists');\r\n            throw new ConflictException('User already exists');\r\n        }\r\n\r\n        this.logger.debug('User not found, creating');\r\n        const id = uuidv4();\r\n        const createdUser = await this.neo4jService.write(\r\n            `\r\n            CREATE (u:User {\r\n                id: $id,\r\n                username: $username,\r\n                password: $password,\r\n                birthdate: $birthdate,\r\n                country: $country,\r\n                description: $description,\r\n                role: 'Guest'\r\n            })\r\n            RETURN u {.id, .username, .password, .birthdate, .country, .description, .role}\r\n            `,\r\n            { id, username, password, birthdate, country, description }\r\n        );\r\n\r\n        const newUser = createdUser.records[0]?.get('u');\r\n        if (!newUser) {\r\n            throw new Error('Failed to create user');\r\n        }\r\n\r\n        return newUser;\r\n    }\r\n}","export * from './lib/models/movie.interface';\r\nexport * from './lib/models/api-response.interface';\r\nexport * from './lib/models/actor.interface';\r\nexport * from './lib/models/auth.interface';\r\nexport * from './lib/models/user.interface';\r\nexport * from './lib/models/review.interface';\r\nexport * from './lib/models/collection.interface';\r\n","\r\nexport enum Genre {\r\n    Action = \"Action\",\r\n    Adventure = \"Adventure\",\r\n    Comedy = \"Comedy\",\r\n    Crime = \"Crime\",\r\n    Drama = \"Drama\",\r\n    Fantasy = \"Fantasy\",\r\n    Horror = \"Horror\",\r\n    Scifi = \"Sci-Fi\",\r\n    War = \"War\"\r\n}\r\n\r\nexport enum Language {\r\n    English = \"English\",\r\n    Dutch = \"Dutch\",\r\n    Japanese = \"Japanese\"\r\n}\r\n\r\nexport interface IMovie {\r\n    id: string,\r\n    title: string,\r\n    photo: string,\r\n    length: number,\r\n    releaseDate: Date,\r\n    advicedAge: number,\r\n    genre: string,\r\n    language: string,\r\n    director: string,\r\n    actors: string[]\r\n}\r\n\r\nexport type ICreateMovie = Pick<\r\n    IMovie,\r\n    'title' | 'photo' | 'length' | 'releaseDate' | 'advicedAge' | 'genre' | 'language' | 'director' | 'actors'\r\n>;\r\nexport type IUpdateMovie = IMovie;","export interface ApiMetaInfo {\r\n    version: string,\r\n    type: 'object' | 'list' | 'none',\r\n    count: number\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n    results?: T[] | T,\r\n    info: ApiMetaInfo\r\n}","export enum Nationality {\r\n    English = \"English\",\r\n    American = \"American\",\r\n    Dutch = \"Dutch\",\r\n    NewZealand = \"New Zealand\",\r\n    Swedish = \"Swedish\",\r\n    Australian = \"Australian\"\r\n}\r\n\r\nexport interface IActor {\r\n    id: string,\r\n    name: string,\r\n    birthdate: Date,\r\n    nationality: string,\r\n    photo: string,\r\n}\r\n\r\nexport type ICreateActor = Pick<\r\nIActor,\r\n'name' | 'birthdate' | 'nationality' | 'photo'\r\n>;\r\n\r\nexport type IUpdateActor = IActor;","export interface IUserCredentials {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport interface IUserRegistration extends IUserCredentials {\r\n    name: string;\r\n}\r\n\r\nexport interface IToken {\r\n    token: string;\r\n}\r\n","export enum UserRole {\r\n    Guest = 'Guest',\r\n    Admin = 'Admin',\r\n    Unknown = 'Unknown'\r\n}\r\n\r\nexport interface IUserIdentity {\r\n    id: string;\r\n    username: string;\r\n    password: string;\r\n    role: UserRole;\r\n    token?: string;\r\n}\r\n\r\nexport interface IUserInfo {\r\n    id: string;\r\n    username: string;\r\n    password: string;\r\n    birthdate: string;\r\n    country: string;\r\n    description?: string;\r\n}\r\n\r\nexport interface IUser {\r\n    id: string;\r\n    username: string;\r\n    birthdate: string;\r\n    country: string;\r\n    description?: string;\r\n}\r\n\r\nexport const initialUser = {\r\n    id: '',\r\n    username: '',\r\n    birthdate: '',\r\n    country: '',\r\n}\r\n\r\nexport type ICreateUser = Pick<IUserInfo, 'username' | 'password' | 'birthdate' | 'country' | 'description'>;\r\nexport type IUpdateUser = Partial<Omit<IUserInfo, 'id'>>;\r\nexport type IUpsertUser = IUserInfo;\r\n","export interface IReview {\r\n    id: string;\r\n    title: string;\r\n    text: string;\r\n    rating: number;\r\n    date: string;\r\n    userId: string;\r\n}\r\n\r\nexport interface IReviewInfo {\r\n    id: string;\r\n    title: string;\r\n    text: string;\r\n    rating: number;\r\n    date: string;\r\n    userId: string;\r\n    username: string;\r\n}\r\n\r\nexport type ICreateReview = Pick<IReview, 'title' | 'text' | 'rating'>;\r\nexport type IUpdateReview = Partial<Omit<IReview, 'id'>>;\r\nexport type IUpsertReview = IReview;","export interface ICollection {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    privateCollection: boolean;\r\n    createDate: string;\r\n    updatedDate: string;\r\n    userId: string; \r\n}\r\n\r\nexport type ICreateCollection = Pick<ICollection, 'name' | 'description' | 'privateCollection'>;\r\nexport type IUpdateCollection = Partial<Omit<ICollection, 'id'>>;\r\nexport type IUpsertCollection = ICollection;","import { SetMetadata } from '@nestjs/common'\r\n\r\nexport const IS_PUBLIC_KEY = 'isPublic'\r\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true)\r\n","import {\r\n    CanActivate,\r\n    ExecutionContext,\r\n    Injectable,\r\n    Logger,\r\n    UnauthorizedException\r\n} from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { Request } from 'express';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    private readonly logger = new Logger(AuthGuard.name);\r\n\r\n    constructor(private jwtService: JwtService) {}\r\n\r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n        const request = context.switchToHttp().getRequest();\r\n        const token = this.extractTokenFromHeader(request);\r\n        if (!token) {\r\n            this.logger.log('No token found');\r\n            throw new UnauthorizedException();\r\n        }\r\n        try {\r\n            const payload = await this.jwtService.verifyAsync(token, {\r\n                secret: process.env['JWT_SECRET'] || 'secretstring'\r\n            });\r\n            this.logger.log('payload', payload);\r\n            // 💡 We're assigning the payload to the request object here\r\n            // so that we can access it in our route handlers\r\n            request['user'] = payload;\r\n        } catch {\r\n            throw new UnauthorizedException();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private extractTokenFromHeader(request: Request): string | undefined {\r\n        const [type, token] = request.headers.authorization?.split(' ') ?? [];\r\n        return type === 'Bearer' ? token : undefined;\r\n    }\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { JwtModule } from \"@nestjs/jwt\";\r\nimport { AuthModule } from \"@org/backend/auth\";\r\nimport { CollectionController } from \"./list/collection.controller\";\r\nimport { CollectionService } from \"./list/collection.service\";\r\n\r\n@Module({\r\n    controllers: [CollectionController],\r\n    providers: [CollectionService],\r\n    imports: [\r\n        AuthModule,\r\n        JwtModule\r\n    ],\r\n    exports: [CollectionService]\r\n})\r\nexport class BackendFeaturesCollectionModule {}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Body, Controller, Param, Post, UseGuards, Request, Put, Delete, Get } from \"@nestjs/common\";\r\nimport { CollectionService } from \"./collection.service\";\r\nimport { CreateCollectionDto } from \"@org/backend/dto\";\r\nimport { ICollection } from \"@org/shared/api\";\r\nimport { AuthGuard } from \"@org/backend/auth\";\r\n\r\n@Controller('collection')\r\nexport class CollectionController {\r\n    constructor(private collectionService: CollectionService) {}\r\n\r\n    @Get('user/:id')\r\n    @UseGuards(AuthGuard)\r\n    async getAllByUser(@Param('id') id: string): Promise<ICollection[]> {\r\n        return this.collectionService.getAllByUser(id);\r\n    }\r\n\r\n    @Get(':id')\r\n    @UseGuards(AuthGuard)\r\n    async getOne(@Param('id') id: string): Promise<ICollection> {\r\n        return this.collectionService.getOne(id);\r\n    }\r\n\r\n    @Get('without/:id')\r\n    @UseGuards(AuthGuard)\r\n    async getListsWithoutMovie(@Param('id') id: string): Promise<ICollection[]> {\r\n        return this.collectionService.getListsWithoutMovie(id);\r\n    }\r\n\r\n    @Get(':id/movies')\r\n    @UseGuards(AuthGuard)\r\n    async getMovieIdsOfCollection(@Param('id') id: string): Promise<string[]> {\r\n        return this.collectionService.getMovieIdsOfCollection(id);\r\n    }\r\n\r\n    @Post('')\r\n    @UseGuards(AuthGuard)\r\n    async create(@Body() data: CreateCollectionDto): Promise<ICollection> {\r\n        return this.collectionService.create(data);\r\n    }\r\n\r\n    @Put(':id')\r\n    @UseGuards(AuthGuard)\r\n    async update(@Param('id') id: string, @Request() req: any): Promise<ICollection | null> {\r\n        return this.collectionService.update(id, req);\r\n    }\r\n\r\n    @Delete(':id')\r\n    @UseGuards(AuthGuard)\r\n    async delete (@Param('id') id: string): Promise<string> {\r\n        return this.collectionService.delete(id);\r\n    }\r\n\r\n    @Put('movies/add')\r\n    @UseGuards(AuthGuard)\r\n    async addToCollection(@Request() req: any): Promise<string> {\r\n        return this.collectionService.addToCollection(req);\r\n    }\r\n\r\n    @Put('movies/remove')\r\n    @UseGuards(AuthGuard)\r\n    async removeFromCollection(@Request() req: any): Promise<string> {\r\n        return this.collectionService.RemoveFromCollection(req);\r\n    }\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Injectable, Logger, UnauthorizedException } from \"@nestjs/common\";\r\nimport { CreateCollectionDto } from \"@org/backend/dto\";\r\nimport { ICollection } from \"@org/shared/api\";\r\nimport { Neo4jService } from \"nest-neo4j/dist\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n@Injectable()\r\nexport class CollectionService {\r\n    TAG = 'CollectionService';\r\n\r\n    constructor(\r\n        private neo4jService: Neo4jService\r\n    ) {}\r\n\r\n    async getUserIdOfCollection(collectionId: string): Promise<string> {\r\n        Logger.log(`Get user ID of collection ${collectionId}`, this.TAG);\r\n\r\n        const result = await this.neo4jService.write(\r\n            `\r\n            MATCH (u:User)-[:MAKEDCOLLECTION]->(c:Collection { id: $collectionId })\r\n            RETURN u.id AS userId\r\n            `,\r\n            { collectionId }\r\n        );\r\n\r\n        const userId = result.records[0]?.get('userId');\r\n        return userId ?? null;\r\n    }\r\n\r\n    // Get All by user\r\n    async getAllByUser(userId: string): Promise<ICollection[]> {\r\n        Logger.log(`Get all collections by user`, this.TAG);\r\n    \r\n        const result = await this.neo4jService.write(\r\n            `\r\n            MATCH (u:User { id: $userId })-[:MAKEDCOLLECTION]->(c:Collection)\r\n            RETURN c {.id, .name, .description, .privateCollection, .createDate, .updatedDate}\r\n            `,\r\n            { userId }\r\n        );\r\n    \r\n        const collections = result.records.map((record: any) => record.get('c'));\r\n        return collections;\r\n    }    \r\n\r\n    async getOne(collectionId: string): Promise<ICollection> {\r\n        Logger.log(`Get collection by id`, this.TAG);\r\n    \r\n        const userId = await this.getUserIdOfCollection(collectionId);\r\n\r\n        const result = await this.neo4jService.write(\r\n            `\r\n            MATCH (c:Collection { id: $collectionId })\r\n            RETURN c.id as id, c.name as name, c.description as description, c.privateCollection as privateCollection, c.createDate as createDate, c.updatedDate as updatedDate\r\n            `,\r\n            { collectionId }\r\n        );\r\n    \r\n        if (result.records.length === 0) {\r\n            throw new Error(`Collection with ID ${collectionId} not found`);\r\n        }\r\n    \r\n        const record = result.records[0];\r\n        const collection: ICollection = {\r\n            id: record.get('id'),\r\n            name: record.get('name'),\r\n            description: record.get('description'),\r\n            privateCollection: record.get('privateCollection'),\r\n            createDate: record.get('createDate'),\r\n            updatedDate: record.get('updatedDate'),\r\n            userId: userId\r\n        };\r\n    \r\n        return collection;\r\n    }\r\n\r\n    // Get list where movie doesn't is included\r\n    async getListsWithoutMovie(movieId: string): Promise<ICollection[]> {\r\n        Logger.log(`Get collections without movie ${movieId}`, this.TAG);\r\n    \r\n        const result = await this.neo4jService.write(\r\n            `\r\n            MATCH (c:Collection)\r\n            WHERE NOT (c)-[:CONTAINS]->(:Movie { id: $movieId })\r\n            RETURN c {.id, .name, .description, .privateCollection, .createDate, .updatedDate}\r\n            `,\r\n            { movieId }\r\n        );\r\n    \r\n        const collections = result.records.map((record: any) => record.get('c'));\r\n        return collections;\r\n    }\r\n\r\n    async getMovieIdsOfCollection(collectionId: string): Promise<string[]> {\r\n        Logger.log(`Get movie IDs of collection ${collectionId}`, this.TAG);\r\n    \r\n        const result = await this.neo4jService.write(\r\n            `\r\n            MATCH (c:Collection { id: $collectionId })-[:CONTAINS]->(m:Movie)\r\n            RETURN COLLECT(m.id) AS movieIds\r\n            `,\r\n            { collectionId }\r\n        );\r\n    \r\n        return result.records[0]?.get('movieIds') ?? [];\r\n    }\r\n\r\n    // Post create\r\n    async create(collection: CreateCollectionDto): Promise<ICollection> {\r\n        Logger.log(`Create collection`, this.TAG);\r\n        const { name, description, privateCollection } = collection;\r\n\r\n        const id = uuidv4();\r\n        const createDate = new Date().toDateString();\r\n\r\n        const createdCollection = await this.neo4jService.write(\r\n            `\r\n            CREATE (c:Collection {\r\n                id: $id,\r\n                name: $name,\r\n                description: $description,\r\n                private: $privateCollection,\r\n                createDate: $createDate,\r\n                updatedDate: $createDate\r\n            })\r\n            return c {.id, .name, .description, .private, .createDate, .updatedDate}\r\n            `,\r\n            { id, name, description, privateCollection, createDate}\r\n        )\r\n\r\n        const newCollection = createdCollection.records[0]?.get('c');\r\n        if (!newCollection) {\r\n            throw new Error('Failed to create review');\r\n        }\r\n\r\n        const userId = collection.userId;\r\n        const collectionId = newCollection.id;\r\n\r\n        await this.neo4jService.write(\r\n            `\r\n            MATCH (u:User), (c:Collection)\r\n            WHERE u.id = $userId and c.id = $collectionId\r\n            MERGE (u)-[:MAKEDCOLLECTION]->(c)\r\n            `,\r\n            { userId: userId, collectionId: collectionId }\r\n        )\r\n\r\n        return newCollection;\r\n    }\r\n\r\n    // Put update\r\n    async update(id: string, req: any): Promise<ICollection | null> {\r\n        Logger.log(`Update collection`, this.TAG);\r\n        const collection = req.body;\r\n        const userId = req.user.user_id;\r\n\r\n        Logger.debug(userId, collection.userId);\r\n\r\n        if (userId === collection.userId) {\r\n            const updatedDate = new Date().toDateString();\r\n\r\n            const result = await this.neo4jService.write(\r\n                `\r\n                MATCH (c:Collection {id: $id})\r\n                RETURN c {.id, .name, .description, .privateCollection, .createDate, .updatedDate}\r\n                `,\r\n                { id: id }\r\n            )\r\n\r\n            if (!result.records[0]) {\r\n                Logger.debug('Collection not found');\r\n                return null;\r\n            };\r\n\r\n            const updatedCollection: Partial<ICollection> = {\r\n                name: collection.name,\r\n                description: collection.description,\r\n                privateCollection: collection.privateCollection,\r\n                updatedDate: updatedDate\r\n            };\r\n\r\n            const updateResult = await this.neo4jService.write(\r\n                `\r\n                MATCH (c:Collection {id: $id})\r\n                SET c += $updatedCollection\r\n                RETURN c {.id, .name, .description, .privateCollection, .createDate, .updatedDate}\r\n                `,\r\n                { id: id, updatedCollection: updatedCollection }\r\n            );\r\n\r\n            if (!updateResult.records[0]) {\r\n                throw new Error('Failed to update collection');\r\n            };\r\n            \r\n            const updatedResult = updateResult.records[0].get('c');\r\n\r\n            const updatedCollectionInfo: ICollection = {\r\n                id: updatedResult.id,\r\n                name: updatedResult.name,\r\n                description: updatedResult.description,\r\n                privateCollection: updatedResult.privateCollection,\r\n                createDate: updatedResult.createDate,\r\n                updatedDate: updatedResult.updatedDate,\r\n                userId: userId\r\n            };\r\n\r\n            return updatedCollectionInfo;\r\n        }\r\n\r\n        throw new UnauthorizedException();\r\n    }\r\n\r\n    // Delete\r\n    async delete(id: string) {\r\n        Logger.log('delete', this.TAG);\r\n\r\n            const deleteResult = await this.neo4jService.write(\r\n                `\r\n                MATCH (c:Collection {id: $id})\r\n                DETACH DELETE c\r\n                `,\r\n                { id: id }\r\n            );\r\n    \r\n            const containsUpdates = deleteResult.summary.updateStatistics.containsUpdates();\r\n    \r\n            if (!containsUpdates) {\r\n                Logger.debug('Failed to delete collection');\r\n                throw new Error('Failed to delete collection');\r\n            }\r\n    \r\n            return 'Success';\r\n    }\r\n\r\n\r\n    async addToCollection(req: any): Promise<string> {\r\n        const data = req.body;\r\n        const userIdLoggedInUser = req.user.user_id;\r\n        Logger.log(`User ${data.userId} puts movie ${data.movieId} to collection ${data.collectionId}`, this.TAG);\r\n\r\n        const userId = data.userId;\r\n        const movieId = data.movieId;\r\n        const collectionId = data.collectionId;\r\n\r\n        if (userIdLoggedInUser === userId) {\r\n            const result = await this.neo4jService.write(\r\n                `\r\n                MATCH (c:Collection), (m:Movie)\r\n                WHERE c.id = $collectionId AND m.id = $movieId\r\n                MERGE (c)-[:CONTAINS]->(m)\r\n                `,\r\n                { collectionId, movieId }\r\n            );\r\n\r\n            const containsUpdates = result.summary.updateStatistics.containsUpdates();\r\n    \r\n            if (!containsUpdates) {\r\n                Logger.debug('Failed to contain movie');\r\n                return 'Failed';\r\n            }\r\n\r\n            return 'Succes';\r\n        }\r\n\r\n        throw new UnauthorizedException();\r\n    \r\n    }\r\n\r\n    async RemoveFromCollection(req: any): Promise<string> {\r\n        const data = req.body;\r\n        const userIdLoggedInUser = req.user.user_id;\r\n        Logger.log(`User ${data.userId} removes movie ${data.movieId} from collection ${data.collectionId}`, this.TAG);\r\n\r\n        const userId = data.userId;\r\n        const movieId = data.movieId;\r\n        const collectionId = data.collectionId;\r\n\r\n        if (userIdLoggedInUser === userId) {\r\n            const result = await this.neo4jService.write(\r\n                `\r\n                MATCH (c:Collection)-[r:CONTAINS]->(m:Movie)\r\n                WHERE c.id = $collectionId AND m.id = $movieId\r\n                DELETE r\r\n                `,\r\n                { collectionId, movieId }\r\n            );\r\n\r\n            const containsUpdates = result.summary.updateStatistics.containsUpdates();\r\n    \r\n            if (!containsUpdates) {\r\n                Logger.debug('Failed to remove movie');\r\n                return 'Failed';\r\n            }\r\n\r\n            return 'Succes';\r\n        }\r\n\r\n        throw new UnauthorizedException();\r\n    \r\n    }\r\n\r\n        \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { CorsOptions } from '@nestjs/common/interfaces/external/cors-options.interface';\r\n\r\nimport { ApiResponseInterceptor } from '@org/backend/dto';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n\r\n  const corsOptions: CorsOptions = {\r\n    origin: '*'\r\n  };\r\n  app.enableCors(corsOptions);\r\n\r\n  app.useGlobalInterceptors(new ApiResponseInterceptor());\r\n\r\n  const port = process.env.PORT || 3000;\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}